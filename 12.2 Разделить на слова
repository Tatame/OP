#include <stdio.h>
#include <stdlib.h>

typedef struct Tokens_s{
    int num;
    char **arr;
}Tokens;

int Bukva(char c){
    if (((c>64)&&(c<91))||((c>96)&&(c<123))) return 1;
    else return 0;
}

void TokensSplit(Tokens *tokens, const char *str){
    if (tokens->arr==NULL){
        int i=0, kol=0;
        while (str[i]!='\0'){
            if (Bukva(str[i])) {
                if (Bukva(str[i+1]));
                else kol+=1;
            }
            i+=1;
        }
        tokens->num=kol;
    }
    else {
        int i=0, kol=0, left=0;
        while (str[i]!='\0'){
            if (Bukva(str[i])) {
                if (Bukva(str[i+1])){
                    kol+=1;
                }
                else {
                    kol+=1;
                    tokens->arr[left]=(char*)malloc((kol+1)*sizeof(char));
                    kol=0;
                    left+=1;
                }
            }
            i+=1;
        }
        left=0;
        kol=0;
        i=0;
        while (str[i]!='\0'){
            if (Bukva(str[i])) {
                if (Bukva(str[i+1])){
                    tokens->arr[left][kol]=str[i];
                    kol+=1;
                }
                else {
                    tokens->arr[left][kol]=str[i];
                    tokens->arr[left][kol+1]='\0';
                    kol=0;
                    left+=1;
                }
            }
            i+=1;
        }
    }
}

void TokensFree(Tokens *tokens){
    free(tokens);
}

int main(){
    char str[1000001];
    scanf("%s",str);
    Tokens tok;
    Tokens *tokens=&tok;
    tokens->arr=NULL;
    TokensSplit(tokens, str);
    tokens->arr=(char**)malloc((tokens->num)*sizeof(char*));
    TokensSplit(tokens, str);
    printf("%d\n", tok.num);
    for (int i=0; i<tok.num; i++){
        printf("%s\n", tok.arr[i]);
    }
    TokensFree(tokens);

    return 0;
}
